<!DOCTYPE html>
<html>
  <head>
    <title>One Month Rails</title>
    <%= stylesheet_link_tag    "application", :media => "all" %>
    <%= javascript_include_tag "application" %>
    <%= csrf_meta_tags %>
    <%= yield(:head) %>
    <%= javascript_include_tag "jquery-1.9.1.js" %>
    <%= javascript_include_tag "jquery-ui-1.10.3.custom.min.js" %>
    <style>
      .wrapper {
         height: 600px;
      }

      #jrange input {
         width: 200px;
      }

      #jrange div {
         font-size: 9pt;
      }

      .date-range-selected > .ui-state-active,
      .date-range-selected > .ui-state-default {
         background: none;
         background-color: lightsteelblue;
      }
    </style>
    <script>

      $.datepicker._defaults.onAfterUpdate = null;

      var datepicker__updateDatepicker = $.datepicker._updateDatepicker;
      $.datepicker._updateDatepicker = function( inst ) {
         datepicker__updateDatepicker.call( this, inst );

         var onAfterUpdate = this._get(inst, 'onAfterUpdate');
         if (onAfterUpdate)
            onAfterUpdate.apply((inst.input ? inst.input[0] : null),
               [(inst.input ? inst.input.val() : ''), inst]);
      }


      $(function() {

         var cur = -1, prv = -1;
         $('#jrange div')
            .datepicker({
                  //numberOfMonths: 3,
                  changeMonth: true,
                  changeYear: true,
                  showButtonPanel: true,

                  beforeShowDay: function ( date ) {
                        return [true, ( (date.getTime() >= Math.min(prv, cur) && date.getTime() <= Math.max(prv, cur)) ? 'date-range-selected' : '')];
                     },

                  onSelect: function ( dateText, inst ) {
                        var d1, d2;

                        prv = cur;
                        cur = (new Date(inst.selectedYear, inst.selectedMonth, inst.selectedDay)).getTime();
                        if ( prv == -1 || prv == cur ) {
                           prv = cur;
                           $('#jrange input').val( dateText );
                        } else {
                           d1 = $.datepicker.formatDate( 'mm/dd/yy', new Date(Math.min(prv,cur)), {} );
                           d2 = $.datepicker.formatDate( 'mm/dd/yy', new Date(Math.max(prv,cur)), {} );
                           $('#jrange input').val( d1+' - '+d2 );
                        }
                     },

                  onChangeMonthYear: function ( year, month, inst ) {
                        //prv = cur = -1;
                     },

                  onAfterUpdate: function ( inst ) {
                        $('<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" data-handler="hide" data-event="click">Done</button>')
                           .appendTo($('#jrange div .ui-datepicker-buttonpane'))
                           .on('click', function () { $('#jrange div').hide(); });
                     }
               })
            .position({
                  my: 'left top',
                  at: 'left bottom',
                  of: $('#jrange input')
               })
            .hide();

         $('#jrange input').on('focus', function (e) {
               var v = this.value,
                   d;

               try {
                  if ( v.indexOf(' - ') > -1 ) {
                     d = v.split(' - ');

                     prv = $.datepicker.parseDate( 'mm/dd/yy', d[0] ).getTime();
                     cur = $.datepicker.parseDate( 'mm/dd/yy', d[1] ).getTime();

                  } else if ( v.length > 0 ) {
                     prv = cur = $.datepicker.parseDate( 'mm/dd/yy', v ).getTime();
                  }
               } catch ( e ) {
                  cur = prv = -1;
               }

               if ( cur > -1 )
                  $('#jrange div').datepicker('setDate', new Date(cur));

               $('#jrange div').datepicker('refresh').show();
            });

      });

      </script>
  </head>
  <body>
    <%= render 'layouts/header' %>

    <div class="container">
            <% flash.each do |name, msg| %>
                <%= content_tag(:div, msg, class: "alert alert-#{name}") %>
            <% end %>
            <%= yield %>
    <%= render 'layouts/footer' %>
    </div>
  </body>
</html>